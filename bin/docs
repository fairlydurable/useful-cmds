#!/bin/bash

usage() {
    echo "Usage: $(basename "$0") "
    echo "   prs              Open docs PRs (docs docs)"
    echo "   lprs             Open learn PRs (docs learn)"
    echo "   branches         Open docs branches"
    echo "   lbranches        Open learn branches"
    echo "   temp             Open main temporal home on GitHub"
    echo ""
    echo "   l relative       Open relative file in learn"
    echo "   d relative       Open relative file in docs"
    echo "   wl relative      Open relative page on learn site"
    echo "   wd relative      Open relative file on docs site"
    echo ""
    echo "   web              Fetch pasteboard relative link and open webpage"
    echo "   open             Resolve, and open source (if exists)"
    echo "   dir              Resolve, and open its parent directory"
    echo ""
    echo "   meet             Open EDU team doc"
    echo "   brian            Open Brian meeting doc"
    echo ""
    echo "   tutorials        Open Jira Launch 2024 epic"
    echo ""
    echo "   mrn              Open MRN page in Macdown"

    echo "Options:"
    echo "  -u, --url         Echo the URL instead of opening it"
    echo "  -h, --help        This message"
    exit 1
}

handle_url() {
    local url="$1"
    url=$(echo "$url" | awk '{gsub(/\/{2,}/, "/"); print}')
    echo -n "$url" | /usr/bin/pbcopy
    echo "$url"
    if [ "$open_url" = true ]; then open "$url"; fi
    exit 0
}

handle_file() {
    readlink -f "$1" | boop
    exit 0
}

handle_open() {
    local pasteboard_url=$(pbpaste)

    if [ -z "$pasteboard_url" ]; then
        echo "Error: Pasteboard is empty or does not contain valid text"
        exit 1
    fi
    
    local full_url="http://docs.temporal.io${pasteboard_url}"
    handle_url "$full_url"
}

handle_dir() {
    local pasteboard_path=$(pbpaste)
    if [ -z "$pasteboard_path" ]; then
        echo "Error: Pasteboard is empty or does not contain valid text"
        exit 1
    fi
    cd ~/docs
    local resolved_path="`pwd -P`/docs/${pasteboard_path}"
    local abs_path=$(echo "$resolved_path" | awk -F/ '{for (i=1; i<=NF; i++) if ($i != "") printf "/" $i; print ""}' | sed 's,//\+,/,g')
    local parent_dir=$(dirname "$resolved_path")
    open "$parent_dir"
}

handle_open() {
    local pasteboard_path=$(pbpaste)
    if [ -z "$pasteboard_path" ]; then
        echo "Error: Pasteboard is empty or does not contain valid text"
        exit 1
    fi
    cd ~/docs
    local resolved_path="`pwd -P`/docs/${pasteboard_path}"
    local abs_path=$(echo "$resolved_path" | awk -F/ '{for (i=1; i<=NF; i++) if ($i != "") printf "/" $i; print ""}' | sed 's,//\+,/,g')
    xcopen "${abs_path}.mdx"
}

if [ $# -eq 0 ]; then
    usage
fi

open_url=true

while [[ $# -gt 0 ]]; do
    case "$1" in
        -u|--url) open_url=false; shift ;;
        -h|--help|--usage|help|usage) usage ;;
        *) break ;;
    esac
done

case "$1" in
    # Temporal
    "temp"|"temporal"|"t") 
        handle_url "https://github.com/temporalio" ;;
        
    # Docs
    "pr"|"prs"|"docs")
        handle_url "https://github.com/temporalio/documentation/pulls" ;;
    "branches") 
        handle_url "https://github.com/temporalio/documentation/branches" ;;

esac

case "$1" in
    # Source node files
    "d")
        shift; xcopen "/Users/ericasadun/docs/docs/${1}"; exit 0 ;;
    "l")
        shift; xcopen "/Users/ericasadun/tutorials/docs/${1}"; exit 0 ;;
    "wd")
        shift; url="${1}"
        if [[ "${url}" == */index.md ]]; then url="${url%/index.md}"; fi
        url="https://learn.temporal.io/${url}"
        handle_url $url
        ;;
    "wl")
        shift; url="${1}"
        if [[ "${url}" == */index.md ]]; then url="${url%/index.md}"; fi
        url="https://learn.temporal.io/${url}"
        handle_url $url
        ;;

    # Learn
    "lprs"|"learn"|"learnprs")
        handle_url "https://github.com/temporalio/temporal-learning/pulls" ;;
    "lbranches")
        handle_url "https://github.com/temporalio/temporal-learning/branches" ;;
    "tutorials"|"tutorial"|"tut")
        handle_url "https://temporalio.atlassian.net/browse/LAUNCH-3667" ;;

    # Handy
    "mr"|"mrn"|"multi-region")
        open "$HOME/docs/docs/production-deployment/cloud/multi-region.mdx" ;;
    "mtg"|"edumtg"|"edu")
        open "https://docs.google.com/document/d/1l2IGJF34G4iFEEWOFoeoPFJ2HD--0Ee4r1vDbpNC7U4/edit" ;;
    "brian")
        open "https://docs.google.com/document/d/1eWSWgLE3GeGMDlj1fCc7DBPH0Mr4HopuMZCu8kX9Fqw/edit#heading=h.hqizhb4lcqm2" ;;

    # Open from pasteboard on web
    "web") 
        handle_web ;;
    
    # Open from pasteboard
    "open") 
        handle_open ;;

    # Directory from pasteboard
    "dir")
        handle_dir ;;
        
    *) 
        echo "Unrecognized request"
        usage ;;
esac
